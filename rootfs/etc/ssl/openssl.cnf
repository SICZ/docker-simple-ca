# Simple Root CA
#
# http://pki-tutorial.readthedocs.io/en/latest/simple/root-ca.conf.html
# https://access.redhat.com/documentation/en-US/Red_Hat_Certificate_System/8.0/html/Admin_Guide/Standard_X.509_v3_Certificate_Extensions.html

# The [default] section contains global constants that can be referred to from
# the entire configuration file. It may also hold settings pertaining to more
# than one openssl command.

[ default ]
dir                     = /var/lib/simple-ca    # Top dir

# The next part of the configuration file is used by the openssl req command.

[ req ]
default_bits            = 2048                  # RSA key size
encrypt_key             = yes                   # Protect private key
default_md              = sha256                # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
distinguished_name      = req_dn                # DN section
req_extensions          = req_ext               # Desired extensions
x509_extensions         = root_ca_ext           # Self-signed certificate extensions

[ req_dn ]
countryName             = Country Name (2 letter code)
#countryName_default     = CZ
countryName_min         = 2
countryName_max         = 2
organizationName        = Organization Name (eg, company)
#organizationName_default = S.ICZ a.s.
organizationName_max    = 64
commonName              = Common Name (e.g. server FQDN or YOUR name)
commonName_max          = 64
emailAddress            = Email Address
emailAddress_max        = 64

[ req_ext ]
keyUsage                = critical,dataEncipherment,digitalSignature,keyAgreement,keyEncipherment
extendedKeyUsage        = critical,clientAuth,emailProtection,serverAuth
basicConstraints        = critical,CA:false
subjectKeyIdentifier    = hash

# The remainder of the configuration file is used by the openssl ca command.
# The CA section defines the locations of CA assets, as well as the policies
# applying to the CA.

[ ca ]
default_ca              = simple_ca             # The default CA section

[ simple_ca ]
certificate             = /var/lib/simple-ca/secrets/ca.crt # The CA cert
private_key             = /var/lib/simple-ca/private/ca.key # CA private key
new_certs_dir           = $dir/newcerts         # Certificate archive
serial                  = $dir/serial           # Serial number file
crlnumber               = $dir/crlnumber        # CRL number file
database                = $dir/index            # Index file
unique_subject          = no                    # Require unique subject
default_days            = 3652                  # How long to certify for
default_crl_days        = 365                   # How long before next CRL
default_md              = sha256                # MD to use
policy                  = any_pol               # Default naming policy
email_in_dn             = no                    # Add email to cert DN
preserve                = no                    # Keep passed DN ordering
name_opt                = ca_default            # Subject DN display options
cert_opt                = ca_default            # Certificate display options
copy_extensions         = none                  # Copy extensions from CSR
x509_extensions         = cert_ext              # Default cert extensions
crl_extensions          = crl_ext               # CRL extensions

# Naming policies control which parts of a DN end up in the certificate and
# under what circumstances certification should be denied.

[ match_pol ]
countryName             = optional              # Included if present
organizationName        = optional              # Included if present
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

# Certificate extensions define what types of certificates the CA is able to
# create.

[ root_ca_ext ]
basicConstraints        = critical,CA:true,pathlen:0
keyUsage                = critical,keyCertSign,cRLSign
subjectKeyIdentifier    = hash

[ cert_ext ]
authorityKeyIdentifier  = keyid:always
basicConstraints        = critical,CA:false
extendedKeyUsage        = critical,clientAuth,emailProtection,serverAuth
keyUsage                = critical,dataEncipherment,digitalSignature,keyAgreement,keyEncipherment
subjectKeyIdentifier    = hash

# CRL extensions exist solely to point to the CA certificate that has issued
# the CRL.

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
